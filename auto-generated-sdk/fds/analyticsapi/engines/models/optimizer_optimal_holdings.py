# coding: utf-8

"""
    Engines API

    Allow clients to fetch Analytics through APIs.  # noqa: E501

    The version of the OpenAPI document: v3:[pa,spar,vault,pub,fi,axp,afi,npo,bpm,fpo,others],v1:[fiab]
    Contact: analytics.api.support@factset.com
    Generated by: https://openapi-generator.tech
"""


import pprint
import re  # noqa: F401

import six

from fds.analyticsapi.engines.configuration import Configuration


class OptimizerOptimalHoldings(object):
    """NOTE: This class is auto generated by OpenAPI Generator.
    Ref: https://openapi-generator.tech

    Do not edit the class manually.
    """

    """
    Attributes:
      openapi_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    openapi_types = {
        'identifier_type': 'str',
        'include_cash': 'bool',
        'exclude_zero': 'bool'
    }

    attribute_map = {
        'identifier_type': 'identifierType',
        'include_cash': 'includeCash',
        'exclude_zero': 'excludeZero'
    }

    def __init__(self, identifier_type=None, include_cash=None, exclude_zero=None, local_vars_configuration=None):  # noqa: E501
        """OptimizerOptimalHoldings - a model defined in OpenAPI"""  # noqa: E501
        if local_vars_configuration is None:
            local_vars_configuration = Configuration()
        self.local_vars_configuration = local_vars_configuration

        self._identifier_type = None
        self._include_cash = None
        self._exclude_zero = None
        self.discriminator = None

        if identifier_type is not None:
            self.identifier_type = identifier_type
        if include_cash is not None:
            self.include_cash = include_cash
        if exclude_zero is not None:
            self.exclude_zero = exclude_zero

    @property
    def identifier_type(self):
        """Gets the identifier_type of this OptimizerOptimalHoldings.  # noqa: E501

        Identifier type  # noqa: E501

        :return: The identifier_type of this OptimizerOptimalHoldings.  # noqa: E501
        :rtype: str
        """
        return self._identifier_type

    @identifier_type.setter
    def identifier_type(self, identifier_type):
        """Sets the identifier_type of this OptimizerOptimalHoldings.

        Identifier type  # noqa: E501

        :param identifier_type: The identifier_type of this OptimizerOptimalHoldings.  # noqa: E501
        :type: str
        """
        allowed_values = ["Asset", "Cusip", "Isin", "RiskModel", "SedolChk", "Sedol", "SymbologyCusip", "Ticker", "TickerRegion", "User"]  # noqa: E501
        if self.local_vars_configuration.client_side_validation and identifier_type not in allowed_values:  # noqa: E501
            raise ValueError(
                "Invalid value for `identifier_type` ({0}), must be one of {1}"  # noqa: E501
                .format(identifier_type, allowed_values)
            )

        self._identifier_type = identifier_type

    @property
    def include_cash(self):
        """Gets the include_cash of this OptimizerOptimalHoldings.  # noqa: E501

        Include cash  # noqa: E501

        :return: The include_cash of this OptimizerOptimalHoldings.  # noqa: E501
        :rtype: bool
        """
        return self._include_cash

    @include_cash.setter
    def include_cash(self, include_cash):
        """Sets the include_cash of this OptimizerOptimalHoldings.

        Include cash  # noqa: E501

        :param include_cash: The include_cash of this OptimizerOptimalHoldings.  # noqa: E501
        :type: bool
        """

        self._include_cash = include_cash

    @property
    def exclude_zero(self):
        """Gets the exclude_zero of this OptimizerOptimalHoldings.  # noqa: E501

        Exclude zero  # noqa: E501

        :return: The exclude_zero of this OptimizerOptimalHoldings.  # noqa: E501
        :rtype: bool
        """
        return self._exclude_zero

    @exclude_zero.setter
    def exclude_zero(self, exclude_zero):
        """Sets the exclude_zero of this OptimizerOptimalHoldings.

        Exclude zero  # noqa: E501

        :param exclude_zero: The exclude_zero of this OptimizerOptimalHoldings.  # noqa: E501
        :type: bool
        """

        self._exclude_zero = exclude_zero

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.openapi_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, OptimizerOptimalHoldings):
            return False

        return self.to_dict() == other.to_dict()

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        if not isinstance(other, OptimizerOptimalHoldings):
            return True

        return self.to_dict() != other.to_dict()
